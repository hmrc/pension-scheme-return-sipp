# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = pension-scheme-return-sipp

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
play.modules.enabled += "uk.gov.hmrc.pensionschemereturnsipp.config.Module"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

play.http.parser.maxMemoryBuffer = 100M

mongodb {
  uri = "mongodb://localhost:27017/pension-scheme-return-sipp"
  encryption {
      enabled = false
      key = "7Y7NCsZxvK9hARwJwl8hGQ=="
  }
}

microservice {
  services {
    auth {
      host = localhost
      port = 8500
    }

    pensionAdministrator {
      protocol = http
      host = localhost
      port = 8205
    }

    pensionsScheme {
      protocol = http
      host = localhost
      port = 8203
    }

    pensionsSchemeReturn {
      protocol = http
      host = localhost
      port = 10704
    }

    if-hod {
       host = localhost
       port = 10702
       env = "ist0"
       authorizationToken = "local"
    }

    email {
      host = localhost
      port = 8300
    }
  }
}

serviceUrls {
  submit-sipp-psr = "/pension-online/scheme-return/SIPP/%s"
  get-sipp-psr = "/pension-online/scheme-return/SIPP/%s"
  get-psr-versions = "/pension-online/reports/%s/PSR/versions"
  email-callback = "/psr/email-response/%s/%s/%s/%s/%s"
}

etmpConfig {
  maxRequestSize = 10485760  # 10 MB in bytes (10 * 1024 * 1024 byte)
}

# this key is for local development only!
queryParameter.encryption.key="gvBoGdgzqG1AarzF1LY0zQ=="

